{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory'; // TODO: Replace with server uri\n\nconst SERVER_URL = 'http://129.213.158.42:9001/graphql';\nconst httpLink = new HttpLink({\n  uri: SERVER_URL\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  link: httpLink,\n  cache,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'ignore'\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all'\n    }\n  }\n});\nexport const getClient = () => client;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/air-force-project/part1/petsEx2/src/graphql/graphql-client/graphql-client.ts"],"names":["ApolloClient","HttpLink","InMemoryCache","SERVER_URL","httpLink","uri","cache","client","link","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","getClient"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,eAA3B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,aAAR,QAA4B,uBAA5B,C,CAEA;;AACA,MAAMC,UAAU,GAAG,oCAAnB;AAEA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,CAAa;AAC5BI,EAAAA,GAAG,EAAEF;AADuB,CAAb,CAAjB;AAIA,MAAMG,KAAK,GAAG,IAAIJ,aAAJ,EAAd;AAEA,MAAMK,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BQ,EAAAA,IAAI,EAAEJ,QADwB;AAE9BE,EAAAA,KAF8B;AAG9BG,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,UADH;AAEVC,MAAAA,WAAW,EAAE;AAFH,KADE;AAKdC,IAAAA,KAAK,EAAE;AACLF,MAAAA,WAAW,EAAE,UADR;AAELC,MAAAA,WAAW,EAAE;AAFR;AALO;AAHc,CAAjB,CAAf;AAeA,OAAO,MAAME,SAAS,GAAG,MAAMP,MAAxB","sourcesContent":["import {ApolloClient} from 'apollo-client';\r\nimport {HttpLink} from 'apollo-link-http';\r\nimport {InMemoryCache} from 'apollo-cache-inmemory';\r\n\r\n// TODO: Replace with server uri\r\nconst SERVER_URL = 'http://129.213.158.42:9001/graphql';\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: SERVER_URL,\r\n});\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache,\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: 'no-cache',\r\n      errorPolicy: 'ignore',\r\n    },\r\n    query: {\r\n      fetchPolicy: 'no-cache',\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n});\r\n\r\nexport const getClient = () => client;\r\n"]},"metadata":{},"sourceType":"module"}