{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\air-force-project\\\\part1\\\\petsEx2\\\\src\\\\components\\\\Map\\\\MapGrid.tsx\";\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport MapItem from './MapItem';\nconst demoImageBackground = 'https://previews.123rf.com/images/roxanabalint/roxanabalint1312/roxanabalint131200148/24476498-demo-grunge-rubber-stamp-on-white.jpg';\nconst useStyles = makeStyles(createStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    display: 'block',\n    background: ({\n      mapSrc\n    }) => `url(${mapSrc})`,\n    position: 'relative'\n  }\n}));\n\nconst MapGrid = props => {\n  const dimX = props.dimX,\n        dimY = props.dimY,\n        _props$mapItems = props.mapItems,\n        mapItems = _props$mapItems === void 0 ? [] : _props$mapItems,\n        _props$onMapClick = props.onMapClick,\n        onMapClick = _props$onMapClick === void 0 ? () => {} : _props$onMapClick,\n        _props$onMapItemClick = props.onMapItemClick,\n        onMapItemClick = _props$onMapItemClick === void 0 ? () => {} : _props$onMapItemClick;\n\n  const _useStyles = useStyles(props),\n        root = _useStyles.root;\n\n  const getCSSPosition = ({\n    x,\n    y\n  }) => {\n    return {\n      top: `${y * 100 / dimY}%`,\n      left: `${x * 100 / dimX}%`\n    };\n  };\n\n  const mapClick = event => {\n    const clientX = event.clientX,\n          clientY = event.clientY,\n          target = event.target;\n\n    const _getBoundingClientRec = target.getBoundingClientRect(),\n          width = _getBoundingClientRec.width,\n          height = _getBoundingClientRec.height,\n          left = _getBoundingClientRec.left,\n          top = _getBoundingClientRec.top;\n\n    const clickedPosition = {\n      x: Math.round((clientX - left) / (width / dimX)),\n      y: Math.round((clientY - top) / (height / dimY))\n    };\n    onMapClick(clickedPosition);\n    event.preventDefault();\n  };\n\n  return React.createElement(\"div\", {\n    className: root,\n    onClick: mapClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, mapItems.map(mapItem => {\n    const id = mapItem.id,\n          position = mapItem.position;\n    return position && React.createElement(MapItem, {\n      key: id,\n      description: mapItem,\n      cssPosition: getCSSPosition(position),\n      onMapItemClick: onMapItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default MapGrid;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/air-force-project/part1/petsEx2/src/components/Map/MapGrid.tsx"],"names":["React","createStyles","makeStyles","MapItem","demoImageBackground","useStyles","root","width","height","display","background","mapSrc","position","MapGrid","props","dimX","dimY","mapItems","onMapClick","onMapItemClick","getCSSPosition","x","y","top","left","mapClick","event","clientX","clientY","target","getBoundingClientRect","clickedPosition","Math","round","preventDefault","map","mapItem","id"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,0BAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAyBA,MAAMC,mBAAmB,GAAG,sIAA5B;AACA,MAAMC,SAAS,GAAGH,UAAU,CAC1BD,YAAY,CAAC;AACXK,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,OAAO,EAAE,OAHL;AAIJC,IAAAA,UAAU,EAAE,CAAC;AAACC,MAAAA;AAAD,KAAD,KAA6B,OAAMA,MAAO,GAJlD;AAKJC,IAAAA,QAAQ,EAAE;AALN;AADK,CAAD,CADc,CAA5B;;AAqBA,MAAMC,OAAyB,GAAGC,KAAK,IAAI;AAAA,QAEvCC,IAFuC,GAOrCD,KAPqC,CAEvCC,IAFuC;AAAA,QAGvCC,IAHuC,GAOrCF,KAPqC,CAGvCE,IAHuC;AAAA,0BAOrCF,KAPqC,CAIvCG,QAJuC;AAAA,QAIvCA,QAJuC,gCAI5B,EAJ4B;AAAA,4BAOrCH,KAPqC,CAKvCI,UALuC;AAAA,QAKvCA,UALuC,kCAK1B,MAAM,CAAE,CALkB;AAAA,gCAOrCJ,KAPqC,CAMvCK,cANuC;AAAA,QAMvCA,cANuC,sCAMtB,MAAM,CAAE,CANc;;AAAA,qBAQ1Bd,SAAS,CAACS,KAAD,CARiB;AAAA,QAQlCR,IARkC,cAQlCA,IARkC;;AAUzC,QAAMc,cAAc,GAAG,CAAC;AAACC,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,GAAD,KAAsC;AAC3D,WAAO;AACLC,MAAAA,GAAG,EAAG,GAAGD,CAAC,GAAG,GAAL,GAAYN,IAAK,GADpB;AAELQ,MAAAA,IAAI,EAAG,GAAGH,CAAC,GAAG,GAAL,GAAYN,IAAK;AAFrB,KAAP;AAID,GALD;;AAOA,QAAMU,QAAQ,GAAIC,KAAD,IAAuC;AAAA,UAC/CC,OAD+C,GACnBD,KADmB,CAC/CC,OAD+C;AAAA,UACtCC,OADsC,GACnBF,KADmB,CACtCE,OADsC;AAAA,UAC7BC,MAD6B,GACnBH,KADmB,CAC7BG,MAD6B;;AAAA,kCAOjDA,MAAD,CAAwBC,qBAAxB,EAPkD;AAAA,UAGpDvB,KAHoD,yBAGpDA,KAHoD;AAAA,UAIpDC,MAJoD,yBAIpDA,MAJoD;AAAA,UAKpDgB,IALoD,yBAKpDA,IALoD;AAAA,UAMpDD,GANoD,yBAMpDA,GANoD;;AAStD,UAAMQ,eAA4B,GAAG;AACnCV,MAAAA,CAAC,EAAEW,IAAI,CAACC,KAAL,CAAW,CAACN,OAAO,GAAGH,IAAX,KAAoBjB,KAAK,GAAGQ,IAA5B,CAAX,CADgC;AAEnCO,MAAAA,CAAC,EAAEU,IAAI,CAACC,KAAL,CAAW,CAACL,OAAO,GAAGL,GAAX,KAAmBf,MAAM,GAAGQ,IAA5B,CAAX;AAFgC,KAArC;AAKAE,IAAAA,UAAU,CAACa,eAAD,CAAV;AACAL,IAAAA,KAAK,CAACQ,cAAN;AACD,GAhBD;;AAkBA,SACE;AAAK,IAAA,SAAS,EAAE5B,IAAhB;AAAsB,IAAA,OAAO,EAAEmB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACkB,GAAT,CAAaC,OAAO,IAAI;AAAA,UAChBC,EADgB,GACAD,OADA,CAChBC,EADgB;AAAA,UACZzB,QADY,GACAwB,OADA,CACZxB,QADY;AAGvB,WACEA,QAAQ,IACN,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEyB,EADP;AAEE,MAAA,WAAW,EAAED,OAFf;AAGE,MAAA,WAAW,EAAEhB,cAAc,CAACR,QAAD,CAH7B;AAIE,MAAA,cAAc,EAAEO,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAUD,GAbA,CADH,CADF;AAkBD,CArDD;;AAuDA,eAAeN,OAAf","sourcesContent":["import React, {FC, MouseEvent} from 'react';\r\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\r\nimport MapItem from './MapItem';\r\nimport {NamedColor} from 'csstype';\r\nimport {IconType} from 'react-icons';\r\n\r\nexport type IconSize = 'small' | 'large' | 'extra-large' | undefined;\r\n\r\nexport interface MapPosition {\r\n  x: number;\r\n  y: number;\r\n  \r\n}\r\n\r\nexport interface CSSPosition {\r\n  top: string;\r\n  left: string;\r\n}\r\n\r\nexport interface MapItemDesc {\r\n  id: any;\r\n  position: MapPosition | undefined;\r\n  icon: IconType;\r\n  offsetElement?: JSX.Element;\r\n  color?: NamedColor;\r\n  size?: IconSize;\r\n}\r\nconst demoImageBackground = 'https://previews.123rf.com/images/roxanabalint/roxanabalint1312/roxanabalint131200148/24476498-demo-grunge-rubber-stamp-on-white.jpg'\r\nconst useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'block',\r\n      background: ({mapSrc}: MapGridProps) => `url(${mapSrc})`,\r\n      position: 'relative',\r\n    }\r\n  })\r\n);\r\n\r\ninterface MapGridProps {\r\n  mapSrc: string;\r\n  dimX: number;\r\n  dimY: number;\r\n  mapItems?: MapItemDesc[];\r\n  onMapClick?: (position: MapPosition) => void;\r\n  onMapItemClick?: (mapIcon: MapItemDesc) => void;\r\n}\r\n\r\nconst MapGrid: FC<MapGridProps> = props => {\r\n  const {\r\n    dimX,\r\n    dimY,\r\n    mapItems = [],\r\n    onMapClick = () => {},\r\n    onMapItemClick = () => {},\r\n  } = props;\r\n  const {root} = useStyles(props);\r\n\r\n  const getCSSPosition = ({x, y}: MapPosition): CSSPosition => {\r\n    return {\r\n      top: `${(y * 100) / dimY}%`,\r\n      left: `${(x * 100) / dimX}%`,\r\n    };\r\n  };\r\n\r\n  const mapClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    const {clientX, clientY, target} = event;\r\n    const {\r\n      width,\r\n      height,\r\n      left,\r\n      top,\r\n    } = (target as HTMLElement).getBoundingClientRect();\r\n\r\n    const clickedPosition: MapPosition = {\r\n      x: Math.round((clientX - left) / (width / dimX)),\r\n      y: Math.round((clientY - top) / (height / dimY)),\r\n    };\r\n\r\n    onMapClick(clickedPosition);\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className={root} onClick={mapClick}>\r\n      {mapItems.map(mapItem => {\r\n        const {id, position} = mapItem;\r\n\r\n        return (\r\n          position && (\r\n            <MapItem\r\n              key={id}\r\n              description={mapItem}\r\n              cssPosition={getCSSPosition(position)}\r\n              onMapItemClick={onMapItemClick}\r\n            />\r\n          )\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapGrid;"]},"metadata":{},"sourceType":"module"}