{"ast":null,"code":"import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nconst GET_EVENTS = gql`\n  query Events($open: Boolean) {\n    openEvents(isOpen: $open) {\n      id\n      eventTime\n      quadcopter {\n        id\n        name\n      }\n      gridCell {\n        x\n        y\n      }\n    }\n  }\n`;\nconst options = {\n  pollInterval: 1000,\n  variables: {\n    open: true\n  },\n  Events\n};\n\nconst useEventsQuery = () => {\n  return useQuery(GET_EVENTS, options);\n};\n\nexport { useEventsQuery };","map":{"version":3,"sources":["C:/Users/Owner/Desktop/air-force-project/part1/petsEx2/src/graphql/queries/events.ts"],"names":["gql","useQuery","GET_EVENTS","options","pollInterval","variables","open","Events","useEventsQuery"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAA0BC,QAA1B,QAAyC,qBAAzC;AAuBA,MAAMC,UAAU,GAAGF,GAAI;;;;;;;;;;;;;;;CAAvB;AAiBA,MAAMG,OAA0C,GAAG;AACjDC,EAAAA,YAAY,EAAE,IADmC;AAEjDC,EAAAA,SAAS,EAAE;AAACC,IAAAA,IAAI,EAAE;AAAP,GAFsC;AAGjDC,EAAAA;AAHiD,CAAnD;;AAMA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAOP,QAAQ,CAAkBC,UAAlB,EAA8BC,OAA9B,CAAf;AACD,CAFD;;AAIA,SAAQK,cAAR","sourcesContent":["import gql from 'graphql-tag';\r\nimport {QueryHookOptions, useQuery} from '@apollo/react-hooks';\r\n\r\nexport interface Event {\r\n  id: number;\r\n  eventTime: string;\r\n  quadcopter: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  gridCell: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n}\r\n\r\nexport interface Data {\r\n  openEvents: Event[];\r\n}\r\n\r\nexport interface Variables {\r\n  open: boolean;\r\n}\r\n\r\nconst GET_EVENTS = gql`\r\n  query Events($open: Boolean) {\r\n    openEvents(isOpen: $open) {\r\n      id\r\n      eventTime\r\n      quadcopter {\r\n        id\r\n        name\r\n      }\r\n      gridCell {\r\n        x\r\n        y\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst options: QueryHookOptions<Data, Variables> = {\r\n  pollInterval: 1000,\r\n  variables: {open: true},\r\n  Events\r\n};\r\n\r\nconst useEventsQuery = () => {\r\n  return useQuery<Data, Variables>(GET_EVENTS, options);\r\n};\r\n\r\nexport {useEventsQuery};\r\n"]},"metadata":{},"sourceType":"module"}