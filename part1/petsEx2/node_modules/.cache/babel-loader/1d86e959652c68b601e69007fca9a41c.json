{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\air-force-project\\\\part1\\\\petsEx2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\air-force-project\\\\part1\\\\petsEx2\\\\src\\\\components\\\\history-chart\\\\history-chart.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Chart } from '@bit/primefaces.primereact.chart'; // StackOverflow: https://stackoverflow.com/questions/5092808/how-do-i-randomly-generate-html-hex-color-codes-using-javascript\n\nconst getRandomColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 16)).toString(16));\n\nconst buildChartData = history => {\n  const labels = [];\n  const values = [];\n  const colors = [];\n  history.forEach(({\n    text,\n    value\n  }) => {\n    labels.push(text);\n    values.push(value);\n    colors.push(getRandomColor());\n  });\n  return {\n    labels,\n    datasets: [{\n      data: values,\n      backgroundColor: colors,\n      hoverBackgroundColor: colors\n    }]\n  };\n};\n\nconst HistoryChart = ({\n  history\n}) => {\n  console.log(history);\n\n  const _useState = useState(buildChartData(history)),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1];\n\n  useEffect(() => {\n    setChartData(buildChartData(history));\n  }, [history]);\n  return React.createElement(Chart, {\n    type: \"pie\",\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n};\n\nexport default HistoryChart;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/air-force-project/part1/petsEx2/src/components/history-chart/history-chart.tsx"],"names":["React","useEffect","useState","Chart","getRandomColor","replace","Math","random","toString","buildChartData","history","labels","values","colors","forEach","text","value","push","datasets","data","backgroundColor","hoverBackgroundColor","HistoryChart","console","log","chartData","setChartData"],"mappings":";;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAAQC,KAAR,QAAoB,kCAApB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,MACrB,UAAUC,OAAV,CAAkB,IAAlB,EAAwB,MAAM,CAAC,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB,EAAlB,CAAF,EAAyBC,QAAzB,CAAkC,EAAlC,CAA9B,CADF;;AAcA,MAAMC,cAAc,GAAIC,OAAD,IAAuC;AAC5D,QAAMC,MAAgB,GAAG,EAAzB;AACA,QAAMC,MAAgB,GAAG,EAAzB;AACA,QAAMC,MAAgB,GAAG,EAAzB;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgB,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,KAAmB;AACjCL,IAAAA,MAAM,CAACM,IAAP,CAAYF,IAAZ;AACAH,IAAAA,MAAM,CAACK,IAAP,CAAYD,KAAZ;AACAH,IAAAA,MAAM,CAACI,IAAP,CAAYb,cAAc,EAA1B;AACD,GAJD;AAMA,SAAO;AACLO,IAAAA,MADK;AAELO,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAEP,MADR;AAEEQ,MAAAA,eAAe,EAAEP,MAFnB;AAGEQ,MAAAA,oBAAoB,EAAER;AAHxB,KADQ;AAFL,GAAP;AAUD,CApBD;;AA+BA,MAAMS,YAAmC,GAAG,CAAC;AAACZ,EAAAA;AAAD,CAAD,KAAe;AACvDa,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;;AADuD,oBAEvBR,QAAQ,CACxCO,cAAc,CAACC,OAAD,CAD0B,CAFe;AAAA;AAAA,QAElDe,SAFkD;AAAA,QAEvCC,YAFuC;;AAMzDzB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,YAAY,CAACjB,cAAc,CAACC,OAAD,CAAf,CAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,SAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAEe,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAXD;;AAaA,eAAeH,YAAf","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Chart} from '@bit/primefaces.primereact.chart';\r\n\r\n// StackOverflow: https://stackoverflow.com/questions/5092808/how-do-i-randomly-generate-html-hex-color-codes-using-javascript\r\nconst getRandomColor = (): string =>\r\n  '#000000'.replace(/0/g, () => (~~(Math.random() * 16)).toString(16));\r\n\r\ninterface ChartDataSet {\r\n  data: number[];\r\n  backgroundColor: string[];\r\n  hoverBackgroundColor: string[];\r\n}\r\n\r\ninterface ChartData {\r\n  labels: string[];\r\n  datasets: ChartDataSet[];\r\n}\r\n\r\nconst buildChartData = (history: HistoryData[]): ChartData => {\r\n  const labels: string[] = [];\r\n  const values: number[] = [];\r\n  const colors: string[] = [];\r\n  history.forEach(({text, value}) => {\r\n    labels.push(text);\r\n    values.push(value);\r\n    colors.push(getRandomColor());\r\n  });\r\n\r\n  return {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        data: values,\r\n        backgroundColor: colors,\r\n        hoverBackgroundColor: colors,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport interface HistoryData {\r\n  text: string;\r\n  value: number;\r\n}\r\n\r\nexport interface HistoryChartProps {\r\n  history: HistoryData[];\r\n}\r\n\r\nconst HistoryChart: FC<HistoryChartProps> = ({history}) => {\r\n    console.log(history);\r\n  const [chartData, setChartData] = useState<ChartData>(\r\n    buildChartData(history)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setChartData(buildChartData(history));\r\n  }, [history]);\r\n\r\n  return <Chart type=\"pie\" data={chartData} />;\r\n};\r\n\r\nexport default HistoryChart;"]},"metadata":{},"sourceType":"module"}