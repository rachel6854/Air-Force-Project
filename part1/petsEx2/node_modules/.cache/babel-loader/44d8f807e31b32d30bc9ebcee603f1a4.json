{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\air-force-project\\\\part1\\\\petsEx2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\air-force-project\\\\part1\\\\petsEx2\\\\src\\\\components\\\\select-form\\\\select-form.tsx\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport ContentWrapper from '../content-wrapper/content-wrapper';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(createStyles({\n  root: {\n    minWidth: '200px',\n    border: 'black solid 2px',\n    borderRadius: '20px'\n  },\n  submit: {\n    marginBottom: '10px'\n  },\n  text: {\n    margin: 'auto'\n  },\n  center: {\n    textAlign: 'center'\n  }\n}));\n\nconst SelectForm = ({\n  header,\n  selectText,\n  submitText,\n  options,\n  onSubmit\n}) => {\n  const _useState = useState(options[0].id),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOptionId = _useState2[0],\n        setSelectedOptionId = _useState2[1];\n\n  const _useStyles = useStyles({}),\n        root = _useStyles.root,\n        submit = _useStyles.submit,\n        text = _useStyles.text,\n        center = _useStyles.center;\n\n  const handleSelect = event => {\n    setSelectedOptionId(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    const selectedOption = options.find(({\n      id\n    }) => id === selectedOptionId);\n    onSubmit(selectedOption);\n  };\n\n  return React.createElement(Paper, {\n    className: root,\n    elevation: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ContentWrapper, {\n    header: header,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: `${center} ${text}`,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, selectText)), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: selectedOptionId,\n    onChange: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, options.map(({\n    id,\n    text\n  }) => React.createElement(MenuItem, {\n    key: id,\n    value: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, text))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: submit,\n    color: \"primary\",\n    onClick: handleSubmit,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, submitText)))));\n};\n\nexport default SelectForm;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/air-force-project/part1/petsEx2/src/components/select-form/select-form.tsx"],"names":["React","useState","Grid","Typography","Button","Select","MenuItem","Paper","ContentWrapper","createStyles","makeStyles","useStyles","root","minWidth","border","borderRadius","submit","marginBottom","text","margin","center","textAlign","SelectForm","header","selectText","submitText","options","onSubmit","id","selectedOptionId","setSelectedOptionId","handleSelect","event","target","value","handleSubmit","selectedOption","find","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgCC,QAAhC,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,0BAAvC;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAC1BD,YAAY,CAAC;AACXG,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,OADN;AAEJC,IAAAA,MAAM,EAAE,iBAFJ;AAGJC,IAAAA,YAAY,EAAE;AAHV,GADK;AAMXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE;AADR,GANG;AASXC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GATK;AAYXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AAZG,CAAD,CADc,CAA5B;;AAgCA,MAAMC,UAA+B,GAAG,CAAC;AACvCC,EAAAA,MADuC;AAEvCC,EAAAA,UAFuC;AAGvCC,EAAAA,UAHuC;AAIvCC,EAAAA,OAJuC;AAKvCC,EAAAA;AALuC,CAAD,KAMlC;AAAA,oBAC4C1B,QAAQ,CAAMyB,OAAO,CAAC,CAAD,CAAP,CAAWE,EAAjB,CADpD;AAAA;AAAA,QACGC,gBADH;AAAA,QACqBC,mBADrB;;AAAA,qBAEiCnB,SAAS,CAAC,EAAD,CAF1C;AAAA,QAEGC,IAFH,cAEGA,IAFH;AAAA,QAESI,MAFT,cAESA,MAFT;AAAA,QAEiBE,IAFjB,cAEiBA,IAFjB;AAAA,QAEuBE,MAFvB,cAEuBA,MAFvB;;AAIJ,QAAMW,YAAY,GAAIC,KAAD,IAA6B;AAChDF,IAAAA,mBAAmB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,cAAc,GAAGV,OAAO,CAACW,IAAR,CAAa,CAAC;AAACT,MAAAA;AAAD,KAAD,KAAUA,EAAE,KAAKC,gBAA9B,CAAvB;AACAF,IAAAA,QAAQ,CAACS,cAAD,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAExB,IAAlB;AAAwB,IAAA,SAAS,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEW,MAAxB;AAAgC,IAAA,OAAO,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAuD,IAAA,OAAO,EAAE,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAqC,IAAA,OAAO,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAG,GAAEH,MAAO,IAAGF,IAAK,EAAxC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BM,UAA7B,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAEJ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAES,gBAAf;AAAiC,IAAA,QAAQ,EAAEE,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACY,GAAR,CAAY,CAAC;AAACV,IAAAA,EAAD;AAAKV,IAAAA;AAAL,GAAD,KACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEU,EAAf;AAAmB,IAAA,KAAK,EAAEA,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IADH,CADD,CADH,CADF,CAJF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,SAAS,EAAEF,MAFb;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAEmB,YAJX;AAKE,IAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGV,UANH,CADF,CAfF,CADF,CADF,CADF;AAgCD,CAnDD;;AAqDA,eAAeH,UAAf","sourcesContent":["import React, {ChangeEvent, FC, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ContentWrapper from '../content-wrapper/content-wrapper';\r\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      minWidth: '200px',\r\n      border: 'black solid 2px',\r\n      borderRadius: '20px',\r\n    },\r\n    submit: {\r\n      marginBottom: '10px',\r\n    },\r\n    text: {\r\n      margin: 'auto',\r\n    },\r\n    center: {\r\n      textAlign: 'center',\r\n    },\r\n  })\r\n);\r\n\r\nexport interface SelectOption {\r\n  id: any;\r\n  text: string;\r\n}\r\n\r\ninterface SelectFormProps {\r\n  header: string;\r\n  selectText: string;\r\n  submitText: string;\r\n  options: SelectOption[];\r\n  onSubmit: (option: SelectOption | undefined) => void;\r\n}\r\n\r\nconst SelectForm: FC<SelectFormProps> = ({\r\n  header,\r\n  selectText,\r\n  submitText,\r\n  options,\r\n  onSubmit,\r\n}) => {\r\n  const [selectedOptionId, setSelectedOptionId] = useState<any>(options[0].id);\r\n  const {root, submit, text, center} = useStyles({});\r\n\r\n  const handleSelect = (event: ChangeEvent<any>) => {\r\n    setSelectedOptionId(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const selectedOption = options.find(({id}) => id === selectedOptionId);\r\n    onSubmit(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Paper className={root} elevation={5}>\r\n      <ContentWrapper header={header} variant=\"h6\">\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n          <Grid item container direction=\"row\" justify=\"center\">\r\n            <Grid item className={`${center} ${text}`} xs={6}>\r\n              <Typography variant=\"body1\">{selectText}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} className={center}>\r\n              <Select value={selectedOptionId} onChange={handleSelect}>\r\n                {options.map(({id, text}) => (\r\n                  <MenuItem key={id} value={id}>\r\n                    {text}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={submit}\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n              size=\"small\">\r\n              {submitText}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ContentWrapper>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SelectForm;"]},"metadata":{},"sourceType":"module"}